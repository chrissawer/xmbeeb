   10 osnewl=&FFE7
   20 oswrch=&FFEE
   30 osbyte=&FFF4
   40 tmp=&80:csum=&81
   50 SOH=&1:EOT=&4
   60 ACK=&6:NAK=&15
   70 FOR pass%=0 TO 3 STEP 3
   80 P%=&2000
   90 [
  100 OPT pass%
  110 LDA #7:LDX #7:JSR osbyte \ 9600 receive
  120 LDA #8:LDX #7:JSR osbyte \ 9600 transmit
  130 LDA #2:LDX #2:JSR osbyte \ enable RS423 input
  140 LDA #&15:LDX #1:JSR osbyte \ flush RS423 input
  150 LDA #NAK:JSR sendByte
  160 .startBlock
  170 JSR readByte:CPY #EOT:BEQ gotEot
  180 CPY #SOH:BNE fail
  190 JSR readByte:STY tmp
  200 JSR readByte:TYA:CLC:ADC tmp
  210 CMP #&FF:BNE fail
  220 LDA #128:STA tmp
  230 LDA #0:STA csum
  240 .loop
  250 JSR readByte
  260 TYA:CLC:ADC csum:STA csum
  270 DEC tmp
  280 BNE loop
  290 JSR readByte:CPY csum:BNE fail
  300 LDA #ACK:JSR sendByte
  310 JMP startBlock
  320 RTS
  330 .sendByte
  340 PHA
  350 LDA #3:LDX #3:JSR osbyte \ enable RS423 output
  360 PLA:JSR oswrch
  370 LDA #3:LDX #0:JSR osbyte \ enable screen output
  380 RTS
  390 .readByte \ blocks, returns byte in Y
  400 LDA #&91:LDX #1:JSR osbyte
  410 BCS readByte
  420 RTS
  430 .fail
  440 LDA #ASC("X"):JSR oswrch
  450 RTS
  460 .gotEot
  470 LDA #ACK:JSR sendByte
  480 RTS
  490 ]
  500 NEXT
